/**  Lowest Common Ancestor in a BST  **/

Node* LCA(Node *root, int n1, int n2)
{
   if(root==NULL) return NULL;
   while(root){
       if(root->data > n1 && root->data > n2){
           root=root->left;
       }
       else if(root->data < n1 && root->data < n2){
           root=root->right;
       }
       else break;
   }
   return root;
}

/** Determine if Two Trees are Identical  **/

bool isIdentical(Node *r1, Node *r2)
{
    if(!r1 && !r2) return 1;
    else if(r1 && r2){
        return ((r1->data == r2->data) && (isIdentical(r1->left,r2->left)) && isIdentical(r1->right,r2->right));
    }
    return 0;
}
